{
  "_args": [
    [
      {
        "raw": "react-google-maps",
        "scope": null,
        "escapedName": "react-google-maps",
        "name": "react-google-maps",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/Derek/Documents/appDir/weatherApp"
    ]
  ],
  "_from": "react-google-maps@latest",
  "_id": "react-google-maps@7.1.0",
  "_inCache": true,
  "_location": "/react-google-maps",
  "_nodeVersion": "6.11.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-google-maps-7.1.0.tgz_1499312512067_0.24499542359262705"
  },
  "_npmUser": {
    "name": "tomchentw",
    "email": "developer@tomchentw.com"
  },
  "_npmVersion": "5.0.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-google-maps",
    "scope": null,
    "escapedName": "react-google-maps",
    "name": "react-google-maps",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-google-maps/-/react-google-maps-7.1.0.tgz",
  "_shasum": "4bd06efc869cbcb6a978c6dbf04daf725e1afd68",
  "_shrinkwrap": null,
  "_spec": "react-google-maps",
  "_where": "/Users/Derek/Documents/appDir/weatherApp",
  "author": {
    "name": "tomchentw",
    "email": "developer@tomchentw.com",
    "url": "https://github.com/tomchentw"
  },
  "bugs": {
    "url": "https://github.com/tomchentw/react-google-maps/issues"
  },
  "dependencies": {
    "babel-runtime": "^6.11.6",
    "can-use-dom": "^0.1.0",
    "create-react-class": "^15.5.2",
    "google-maps-infobox": "^1.1.13",
    "invariant": "^2.2.1",
    "lodash": "^4.16.2",
    "marker-clusterer-plus": "^2.1.4",
    "prop-types": "^15.5.8",
    "react-display-name": "^0.2.0",
    "react-prop-types-element-of-type": "^2.2.0",
    "scriptjs": "^2.5.8",
    "warning": "^3.0.0"
  },
  "description": "React.js Google Maps integration component",
  "devDependencies": {
    "babel-cli": "^6.16.0",
    "babel-core": "^6.16.0",
    "babel-eslint": "^7.2.2",
    "babel-plugin-lodash": "^3.2.9",
    "babel-plugin-transform-flow-comments": "^6.8.0",
    "babel-plugin-transform-runtime": "^6.15.0",
    "babel-plugin-typecheck": "^3.9.0",
    "babel-preset-es2015": "^6.16.0",
    "babel-preset-react": "^6.16.0",
    "babel-preset-stage-0": "^6.16.0",
    "codeclimate-test-reporter": "^0.4.1",
    "cross-env": "^4.0.0",
    "eslint": "^3.19.0",
    "eslint-config-react-app": "^0.6.2",
    "eslint-plugin-flowtype": "^2.32.1",
    "eslint-plugin-import": "^2.2.0",
    "eslint-plugin-jsx-a11y": "^4.0.0",
    "eslint-plugin-react": "^6.10.3",
    "isomorphic-fetch": "^2.2.1",
    "prismjs": "^1.5.1",
    "raf": "^3.3.0",
    "raw-loader": "^0.5.1",
    "react": "^15.5.4",
    "react-bootstrap": "^0.30.3",
    "react-dom": "^15.5.4",
    "react-github-fork-ribbon": "^0.5.0",
    "react-helmet": "^5.0.3",
    "react-icons": "^2.2.1",
    "react-prism": "^4.0.0",
    "react-router": "^3.0.5",
    "react-router-bootstrap": "^0.23.2",
    "react-scripts": "^0.9.5",
    "react-toastr": "^2.8.1",
    "rimraf": "^2.5.4",
    "standard-version": "^4.0.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-QLFN0Pa+OqX81sIYF3luNfu7if3HfGCuUOt3OjsxyafAE22AHTEle+3BhlsOm980JgLkh4VCIEQjra/U7lFYlg==",
    "shasum": "4bd06efc869cbcb6a978c6dbf04daf725e1afd68",
    "tarball": "https://registry.npmjs.org/react-google-maps/-/react-google-maps-7.1.0.tgz"
  },
  "files": [
    "lib/",
    "src/lib",
    "CHANGELOG.md"
  ],
  "gitHead": "750c3a613dac61f082741ef02c269c26948fa44b",
  "homepage": "https://tomchentw.github.io/react-google-maps/",
  "keywords": [
    "React.js",
    "React",
    "react-component",
    "google",
    "map",
    "maps",
    "place",
    "places",
    "googlemap",
    "googlemaps",
    "google-map",
    "google-maps",
    "google map",
    "google maps",
    "HeatmapLayer",
    "Map",
    "Marker",
    "Polyline",
    "Polygon",
    "Circle",
    "Directions",
    "InfoWindow",
    "SearchBox",
    "TrafficLayer"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "tomchentw",
      "email": "developer@tomchentw.com"
    }
  ],
  "name": "react-google-maps",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^15.5.4",
    "react-dom": "^15.5.4"
  },
  "readme": "# react-google-maps\n> React.js Google Maps integration component\n\n[![Version][npm-image]][npm-url] [![Travis CI][travis-image]][travis-url] [![Quality][codeclimate-image]][codeclimate-url] [![Coverage][codeclimate-coverage-image]][codeclimate-coverage-url] [![Dependencies][gemnasium-image]][gemnasium-url] [![Gitter][gitter-image]][gitter-url]\n\n\n## Getting Help\n\n**For support or usage questions like “how do I do X with React-Google-Maps” and “my code doesn't work”, please search and ask on StackOverflow [with a google-maps tag](https://stackoverflow.com/questions/tagged/google-maps?sort=votes&pageSize=50) or [use react-google-maps as a keyword](https://stackoverflow.com/search?q=react-google-maps) first.**\n\nWe ask you to do this because StackOverflow has a much better job at keeping popular questions visible. Unfortunately good answers get lost and outdated on GitHub.\n\nSome questions take a long time to get an answer. **If your question gets closed or you don't get a reply on StackOverflow for longer than a few days,** we encourage you to post an issue linking to your question. We will close your issue but this will give people watching the repo an opportunity to see your question and reply to it on StackOverflow if they know the answer.\n\nPlease be considerate when doing this as this is not the primary purpose of the issue tracker.\n\n\n## Versions\n\n* For `React >= 15.5`, use [next](https://github.com/tomchentw/react-google-maps/releases/tag/v7.0.0) tag on npm\n* For `React < 15.5`, use [latest](https://github.com/tomchentw/react-google-maps/releases/tag/v6.3.0) tag on npm\n\n\n## Call for maintainers\n\nAs the author ([tomchentw][tomchentw]) currently doesn't actively use this module, he's looking for awesome contributors to help and keep the community healthy. Please don't hesitate to [contact him][tomchentw] directly. See [#266][call-for-maintainers] for more information.\n\n\n## Documentation\n\nBasically just a simple wrapper around [Google Maps Javascript API][Google Maps Javascript API]. Also check out the [demo][demo] app and it's source under [src/app][src_app] folder.\n\n**Note**: this doc is under development for [v6.0.0](https://github.com/tomchentw/react-google-maps/issues/318). Find docs for [v5.x][docs_v5] and [v4.x][docs_v4] with the git tags.\n\n### withGoogleMap\n\n```jsx\nimport { withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\n\n// Wrap all `react-google-maps` components with `withGoogleMap` HOC\n// and name it GettingStartedGoogleMap\nconst GettingStartedGoogleMap = withGoogleMap(props => (\n  <GoogleMap\n    ref={props.onMapLoad}\n    defaultZoom={3}\n    defaultCenter={{ lat: -25.363882, lng: 131.044922 }}\n    onClick={props.onMapClick}\n  >\n    {props.markers.map((marker, index) => (\n      <Marker\n        {...marker}\n        onRightClick={() => props.onMarkerRightClick(index)}\n      />\n    ))}\n  </GoogleMap>\n));\n// Then, render it:\nrender(\n  <GettingStartedGoogleMap\n    containerElement={\n      <div style={{ height: `100%` }} />\n    }\n    mapElement={\n      <div style={{ height: `100%` }} />\n    }\n    onMapLoad={_.noop}\n    onMapClick={_.noop}\n    markers={markers}\n    onMarkerRightClick={_.noop}\n  />,\n  document.getElementById('root')\n);\n```\n\n### GoogleMap\n\n```jsx\n<GoogleMap\n  onClick={_.noop}\n  onRightClick={_.noop}\n  onDragStart={_.noop}\n/>\n```\n\n### Marker\n\n```jsx\n<Marker\n  onClick={_.noop}\n  onRightClick={_.noop}\n  onDragStart={_.noop}\n/>\n```\n\n### Circle\n\n```jsx\n<Circle\n  onClick={_.noop}\n  onRightClick={_.noop}\n  onDragStart={_.noop}\n/>\n```\n\n### Rectangle\n\n```jsx\n<Rectangle\n  onClick={_.noop}\n  onRightClick={_.noop}\n  onDragStart={_.noop}\n/>\n```\n\n### Polyline\n\n```jsx\n<Polyline\n  onClick={_.noop}\n  onRightClick={_.noop}\n  onDragStart={_.noop}\n/>\n```\n\n### Polygon\n\n```jsx\n<Polygon\n  onClick={_.noop}\n  onRightClick={_.noop}\n  onDragStart={_.noop}\n/>\n```\n\n### KmlLayer\n\n```jsx\n<KmlLayer\n  onClick={_.noop}\n  onDefaultViewportChanged={_.noop}\n  onStatusChanged={_.noop}\n/>\n```\n\n### FusionTablesLayer\n\n```jsx\n<FusionTablesLayer\n  onClick={_.noop}\n/>\n```\n\n### InfoWindow\n\n```jsx\n<InfoWindow\n  onCloseClick={_.noop}\n  onDomReady={_.noop}\n  onZIndexChanged={_.noop}\n/>\n```\n\n### StreetViewPanorama\n```jsx\n<StreetViewPanorama\n  element={<div>Optional placeholder to render StreetView panorama separate from map</div>}\n/>\n```\n\n### drawing/DrawingManager\n\n```jsx\n<DrawingManager\n  onCircleComplete={_.noop}\n  onOverlayComplete={_.noop}\n/>\n```\n\n### places/SearchBox\n\n```jsx\n<SearchBox\n  inputPlaceholder=\"Customized your placeholder\"\n  inputStyle={INPUT_STYLE}\n/>\n```\n\n### addons/MarkerClusterer\n\n```jsx\n<MarkerClusterer\n  onClusteringBegin={_.noop}\n  onMouseOut={_.noop}\n/>\n```\n\n### addons/InfoBox\n\n```jsx\n<InfoBox\n  onCloseClick={_.noop}\n  onDomReady={_.noop}\n  onZIndexChanged={_.noop}\n/>\n```\n\n### async/withScriptjs\n\n```jsx\nimport { withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nimport withScriptjs from \"react-google-maps/lib/async/withScriptjs\";\n\n// Wrap all `react-google-maps` components with `withGoogleMap` HOC\n// then wraps it into `withScriptjs` HOC\n// It loads Google Maps JavaScript API v3 for you asynchronously.\n// Name the component AsyncGettingStartedExampleGoogleMap\nconst AsyncGettingStartedExampleGoogleMap = withScriptjs(\n  withGoogleMap(\n    props => (\n      <GoogleMap\n        ref={props.onMapLoad}\n        defaultZoom={3}\n        defaultCenter={{ lat: -25.363882, lng: 131.044922 }}\n        onClick={props.onMapClick}\n      >\n        {props.markers.map(marker => (\n          <Marker\n            {...marker}\n            onRightClick={() => props.onMarkerRightClick(marker)}\n          />\n        ))}\n      </GoogleMap>\n    )\n  )\n);\n// Then, render it:\nrender(\n  <AsyncGettingStartedExampleGoogleMap\n    googleMapURL=\"https://maps.googleapis.com/maps/api/js?v=3.exp\"\n    loadingElement={\n      <div style={{ height: `100%` }}>\n        <FaSpinner\n          style={{\n            display: `block`,\n            width: `80px`,\n            height: `80px`,\n            margin: `150px auto`,\n            animation: `fa-spin 2s infinite linear`,\n          }}\n        />\n      </div>\n    }\n    containerElement={\n      <div style={{ height: `100%` }} />\n    }\n    mapElement={\n      <div style={{ height: `100%` }} />\n    }\n    onMapLoad={_.noop}\n    onMapClick={_.noop}\n    markers={markers}\n    onMarkerRightClick={_.noop}\n  />,\n  document.getElementById('root')\n);\n```\n\n## Changelog\n\nThe changelog is automatically generated via [conventional-changelog][conventional-changelog] and [can be found in project root](https://github.com/tomchentw/react-google-maps/blob/master/CHANGELOG.md) as well as npm tarball.\n\n\n\n[npm-image]: https://img.shields.io/npm/v/react-google-maps.svg?style=flat-square\n[npm-url]: https://www.npmjs.org/package/react-google-maps\n\n[travis-image]: https://img.shields.io/travis/tomchentw/react-google-maps.svg?style=flat-square\n[travis-url]: https://travis-ci.org/tomchentw/react-google-maps\n[codeclimate-image]: https://img.shields.io/codeclimate/github/tomchentw/react-google-maps.svg?style=flat-square\n[codeclimate-url]: https://codeclimate.com/github/tomchentw/react-google-maps\n[codeclimate-coverage-image]: https://img.shields.io/codeclimate/coverage/github/tomchentw/react-google-maps.svg?style=flat-square\n[codeclimate-coverage-url]: https://codeclimate.com/github/tomchentw/react-google-maps\n[gemnasium-image]: https://img.shields.io/gemnasium/tomchentw/react-google-maps.svg?style=flat-square\n[gemnasium-url]: https://gemnasium.com/tomchentw/react-google-maps\n[gitter-image]: https://badges.gitter.im/Join%20Chat.svg\n[gitter-url]: https://gitter.im/tomchentw/react-google-maps?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n\n\n[tomchentw]: https://github.com/tomchentw\n[call-for-maintainers]: https://github.com/tomchentw/react-google-maps/issues/266\n[demo]: https://tomchentw.github.io/react-google-maps/\n[src_app]: https://github.com/tomchentw/react-google-maps/tree/master/src/app\n[Google Maps Javascript API]: https://developers.google.com/maps/documentation/javascript/\n[conventional-changelog]: https://github.com/ajoslin/conventional-changelog\n[docs_v5]: https://github.com/tomchentw/react-google-maps/tree/v5.1.0#documentation\n[docs_v4]: https://github.com/tomchentw/react-google-maps/tree/v4.11.0#documentation\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/tomchentw/react-google-maps.git"
  },
  "scripts": {
    "build:app": "react-scripts build",
    "build:lib": "cross-env NODE_ENV=production babel src/lib --out-dir lib",
    "clean": "rimraf lib",
    "commit:app": "git add -A && git commit -m 'docs: compile from src/app with react-scripts'",
    "commit:lib": "git add -A && git commit -m 'chore(lib): compile from src/lib using babel'",
    "eject": "react-scripts eject",
    "lint": "cross-env NODE_ENV=test eslint .",
    "prebuild:lib": "npm run lint && npm run clean",
    "precommit:app": "npm run build:app",
    "precommit:lib": "npm run build:lib",
    "prerelease": "npm run commit:lib && npm run commit:app",
    "pretest": "npm run lint",
    "release": "standard-version",
    "start": "react-scripts start",
    "test": "react-scripts test --env=jsdom",
    "test:once": "cross-env CI=true npm test"
  },
  "version": "7.1.0"
}
